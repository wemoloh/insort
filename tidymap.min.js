(function(){'use strict';function c(k,l,m){let n=0,o=k.length;for(;n<o;){let p=h((n+o)/2);0<l(m,k[p])?n=p+1:o=p}return n}const d=Symbol('compare function'),e=Symbol('order array'),g=(k,l)=>(k+'').localeCompare(l);let h=Math.floor;class j extends Map{constructor(k=[],l=g){super();let m=[];for(let[n,o]of k){let p=this.size;super.set(n,o),p!==this.size&&m.push(n)}this[e]=m.sort(l),this[d]=l}clear(){super.clear(),this[e].length=0}delete(k){let l=super.delete(k);if(l){let m=this[e];m.splice(c(m,this[d],k),1)}return l}entries(){let k=0,l=this[e];return{next:()=>{if(k>=l.length)return{value:void 0,done:!0};let m=l[k++];return{value:[m,this.get(m)],done:!1}}}}forEach(k,l){for(let m of this[e])k.call(l,this.get(m),m,this)}keys(){return this[e][Symbol.iterator]()}set(k,l){let m=this.size;if(super.set(k,l),m!==this.size){let n=this[e];n.splice(c(n,this[d],k),0,k)}return this}values(){let k=0,l=this[e];return{next:()=>{return k>=l.length?{value:void 0,done:!0}:{value:this.get(l[k++]),done:!1}}}}}j.prototype[Symbol.iterator]=j.prototype.entries,'undefined'!=typeof module&&!module.nodeType&&module.exports?module.exports=j:self.TidyMap=j})();
