(function(){'use strict';function c(j,k,l){let m=0,n=j.length;for(;m<n;){let o=h((m+n)/2);0<k(l,j[o])?m=o+1:n=o}return m}const d=Symbol('compare function'),e=Symbol('order array'),g=(j,k)=>(j+'').localeCompare(k);let h=Math.floor;class i extends Map{constructor(j=[],k=g){super();let l=[];for(let[m,n]of j){let o=this.size;super.set(m,n),o!==this.size&&l.push(m)}this[e]=l.sort(k),this[d]=k}clear(){super.clear(),this[e].length=0}delete(j){let k=super.delete(j);if(k){let l=this[e];l.splice(c(l,this[d],j),1)}return k}*entries(){for(let j of this[e])yield[j,this.get(j)]}forEach(j,k){for(let l of this[e])j.call(k,this.get(l),l,this)}keys(){return this[e][Symbol.iterator]()}set(j,k){let l=this.size;if(super.set(j,k),l!==this.size){let m=this[e];m.splice(c(m,this[d],j),0,j)}return this}*values(){for(let j of this[e])yield this.get(j)}}i.prototype[Symbol.iterator]=i.prototype.entries,'undefined'!=typeof module&&!module.nodeType&&module.exports?module.exports=i:self.TidyMap=i})();
